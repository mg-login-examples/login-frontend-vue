name: Push-to-EC2

# Trigger deployment only on push to main branch
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      # - name: Run unit tests
      #   run: sudo ./scripts_docker.sh run-unit-tests
      # - name: Zip allure reports
      #   if: success() || failure()
      #   run: cd src && mv allure-results results && zip -r results.zip results
      # - name: Copy zipped reports to allure server
      #   if: success() || failure()
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ secrets.HOST_DNS }}
      #     username: ${{ secrets.USERNAME }}
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     port: 22
      #     source: "src/results.zip"
      #     target: "/home/ubuntu/allure-docker/projects/frontend-unit/"
      #     strip_components: 1
      # - name: Delete previous allure-results folder, unzip new results and delete zipped results, and generate report
      #   if: success() || failure()
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.HOST_DNS }}
      #     username: ${{ secrets.USERNAME }}
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     port: 22
      #     script: >-
      #       cd /home/ubuntu/allure-docker/projects/frontend-unit &&
      #       sudo rm -rf results &&
      #       unzip results.zip &&
      #       rm results.zip &&
      #       curl http://localhost:5050/allure-docker-service/generate-report?project_id=frontend-unit
  e2e-tests-cypress:
    name: Run cypress e2e tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
  e2e-tests-playwright:
    name: Run playwright e2e tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests-cypress, e2e-tests-playwright]
    steps:
      - name: Do Not Deploy
        run: echo "Do Not Deploy"
      # - name: Build & Restart Frontend - build new container to serve latest frontend
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.HOST_DNS }}
      #     username: ${{ secrets.USERNAME }}
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     port: 22
      #     script: >-
      #       cd /home/ubuntu &&
      #       sudo rm -rf frontend-vue-old &&
      #       mv frontend-vue frontend-vue-old &&
      #       git clone -b main https://github.com/mg-login-examples/login-frontend-vue-vite.git frontend-vue &&
      #       cd frontend-vue &&
      #       git clone -b main https://github.com/mg-login-examples/login-frontend-vue-vite.git backend &&
      #       cd .. &&
      #       sudo rm -rf frontend-vue-old &&
      #       cd frontend-vue &&
      #       ./scripts_docker.sh launch-frontend-cloud-dev
