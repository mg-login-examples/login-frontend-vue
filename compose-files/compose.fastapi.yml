version: '3.8'

services:
  fastapi:
    restart: always
    tty: true # enables colored log # docker run -t
    stdin_open: false # enables colored log # docker run -i
    build:
      context: ./backend/src/
    networks:
      - backend
      - fullstack_proxy
      - traefik-public
    depends_on:
      mysql_db:
        condition: service_healthy
      mongo_db:
        condition: service_healthy
      redis_cache:
        condition: service_healthy
    ports:
      - ${API_SERVER_PORT:-8018}:${SERVER_PORT:-8018}
    volumes:
      - ./backend/src:/app
      - ./backend/app.log:/app.log
      - ./backend/app-tests.log:/app-tests.log
    secrets:
      - mysql-password
      - mongo-password
      - redis-pass
    environment:
      - DATABASE_URL=${DATABASE_URL:-mysql+pymysql://root@mysql_db/login}
      - DATABASE_USER
      - DATABASE_PASSWORD
      - CHECK_SQL_DB_CONNECTION_ON_APP_START=True
      - MONGO_HOST=${MONGO_HOST-mongo_db}
      - MONGO_PORT=27017
      - MONGO_USERNAME=${MONGO_USERNAME-root_user}
      - MONGO_PASSWORD
      - USE_IN_MEMORY_MONGO_DB=False
      - CHECK_MONGO_DB_CONNECTION_ON_APP_START=True
      - ACCESS_TOKENS_STORE_TYPE=${ACCESS_TOKENS_STORE_TYPE:-redis}
      - REDIS_URL=${REDIS_URL:-redis://redis_cache}
      - REDIS_PASSWORD
      - CHECK_REDIS_CONNECTION_ON_APP_START=True
      - PUBSUB_URL=${PUBSUB_URL:-redis://redis_cache}
      - CORS_ORIGINS_SET=${CORS_ORIGINS_SET:-Development}
      - USER_AUTH_COOKIE_TYPE=${USER_AUTH_COOKIE_TYPE:-localhost_development}
      - ADMIN_USER_AUTH_COOKIE_TYPE=${ADMIN_USER_AUTH_COOKIE_TYPE:-localhost_development}
      - RELOAD_APP_ON_CHANGE=${RELOAD_APP_ON_CHANGE:-True}
      - LOG_TO_FILE=${LOG_TO_FILE:-True}
      - LOG_ENV_VARS_ON_APP_START=${LOG_ENV_VARS_ON_APP_START:-False}
      - TEST_ADMIN_USER_EMAIL
      - TEST_ADMIN_USER_PASSWORD
    healthcheck:
      # test: wget --no-verbose --tries=1 -O /dev/null http://localhost:8018/docs
      test: wget --no-verbose --tries=1 --spider http://localhost:8018/api/health-check/
      timeout: 20s
      interval: 10s
      retries: 10
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.backend.rule=Host(`backend.${PRIMARY_DOMAIN}`)'
      - 'traefik.http.routers.backend.entrypoints=websecure'
      - 'traefik.http.routers.backend.tls=true'
      - 'traefik.http.routers.backend.tls.certresolver=myresolver'
      - 'traefik.http.services.backend.loadbalancer.server.port=8018'
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '0.25'
    #       memory: 256M
    #     reservations:
    #       cpus: '0.25'
    #       memory: 128M
